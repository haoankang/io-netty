// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ank/hao/io/protobuf/proto/tree.proto

package ank.hao.io.protobuf.code;

public final class TreeProtos {
  private TreeProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TreeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Tree)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 age = 2;</code>
     * @return The age.
     */
    int getAge();

    /**
     * <code>.tutorial.Tree.TreeType treeType = 3;</code>
     * @return The enum numeric value on the wire for treeType.
     */
    int getTreeTypeValue();
    /**
     * <code>.tutorial.Tree.TreeType treeType = 3;</code>
     * @return The treeType.
     */
    ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType getTreeType();

    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> 
        getLeafList();
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getLeaf(int index);
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    int getLeafCount();
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    java.util.List<? extends ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder> 
        getLeafOrBuilderList();
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder getLeafOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tutorial.Tree}
   */
  public  static final class Tree extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Tree)
      TreeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Tree.newBuilder() to construct.
    private Tree(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Tree() {
      name_ = "";
      treeType_ = 0;
      leaf_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Tree();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Tree(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              age_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              treeType_ = rawValue;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                leaf_ = new java.util.ArrayList<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf>();
                mutable_bitField0_ |= 0x00000001;
              }
              leaf_.add(
                  input.readMessage(ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          leaf_ = java.util.Collections.unmodifiableList(leaf_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ank.hao.io.protobuf.code.TreeProtos.Tree.class, ank.hao.io.protobuf.code.TreeProtos.Tree.Builder.class);
    }

    /**
     * Protobuf enum {@code tutorial.Tree.TreeType}
     */
    public enum TreeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LIUSHU = 0;</code>
       */
      LIUSHU(0),
      /**
       * <code>YANGSHU = 1;</code>
       */
      YANGSHU(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LIUSHU = 0;</code>
       */
      public static final int LIUSHU_VALUE = 0;
      /**
       * <code>YANGSHU = 1;</code>
       */
      public static final int YANGSHU_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TreeType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TreeType forNumber(int value) {
        switch (value) {
          case 0: return LIUSHU;
          case 1: return YANGSHU;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TreeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TreeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TreeType>() {
              public TreeType findValueByNumber(int number) {
                return TreeType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ank.hao.io.protobuf.code.TreeProtos.Tree.getDescriptor().getEnumTypes().get(0);
      }

      private static final TreeType[] VALUES = values();

      public static TreeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TreeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tutorial.Tree.TreeType)
    }

    /**
     * Protobuf enum {@code tutorial.Tree.LeafType}
     */
    public enum LeafType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GREEN = 0;</code>
       */
      GREEN(0),
      /**
       * <code>YELLOW = 1;</code>
       */
      YELLOW(1),
      /**
       * <code>RED = 2;</code>
       */
      RED(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GREEN = 0;</code>
       */
      public static final int GREEN_VALUE = 0;
      /**
       * <code>YELLOW = 1;</code>
       */
      public static final int YELLOW_VALUE = 1;
      /**
       * <code>RED = 2;</code>
       */
      public static final int RED_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LeafType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LeafType forNumber(int value) {
        switch (value) {
          case 0: return GREEN;
          case 1: return YELLOW;
          case 2: return RED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LeafType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LeafType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LeafType>() {
              public LeafType findValueByNumber(int number) {
                return LeafType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ank.hao.io.protobuf.code.TreeProtos.Tree.getDescriptor().getEnumTypes().get(1);
      }

      private static final LeafType[] VALUES = values();

      public static LeafType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LeafType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tutorial.Tree.LeafType)
    }

    public interface LeafOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tutorial.Tree.Leaf)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint64 leafId = 1;</code>
       * @return The leafId.
       */
      long getLeafId();

      /**
       * <code>.tutorial.Tree.LeafType leafType = 2;</code>
       * @return The enum numeric value on the wire for leafType.
       */
      int getLeafTypeValue();
      /**
       * <code>.tutorial.Tree.LeafType leafType = 2;</code>
       * @return The leafType.
       */
      ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType getLeafType();
    }
    /**
     * Protobuf type {@code tutorial.Tree.Leaf}
     */
    public  static final class Leaf extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tutorial.Tree.Leaf)
        LeafOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Leaf.newBuilder() to construct.
      private Leaf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Leaf() {
        leafType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Leaf();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Leaf(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                leafId_ = input.readUInt64();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                leafType_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_Leaf_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_Leaf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.class, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder.class);
      }

      public static final int LEAFID_FIELD_NUMBER = 1;
      private long leafId_;
      /**
       * <code>uint64 leafId = 1;</code>
       * @return The leafId.
       */
      public long getLeafId() {
        return leafId_;
      }

      public static final int LEAFTYPE_FIELD_NUMBER = 2;
      private int leafType_;
      /**
       * <code>.tutorial.Tree.LeafType leafType = 2;</code>
       * @return The enum numeric value on the wire for leafType.
       */
      public int getLeafTypeValue() {
        return leafType_;
      }
      /**
       * <code>.tutorial.Tree.LeafType leafType = 2;</code>
       * @return The leafType.
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType getLeafType() {
        @SuppressWarnings("deprecation")
        ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType result = ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.valueOf(leafType_);
        return result == null ? ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (leafId_ != 0L) {
          output.writeUInt64(1, leafId_);
        }
        if (leafType_ != ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.GREEN.getNumber()) {
          output.writeEnum(2, leafType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (leafId_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, leafId_);
        }
        if (leafType_ != ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.GREEN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, leafType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf)) {
          return super.equals(obj);
        }
        ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf other = (ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf) obj;

        if (getLeafId()
            != other.getLeafId()) return false;
        if (leafType_ != other.leafType_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEAFID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLeafId());
        hash = (37 * hash) + LEAFTYPE_FIELD_NUMBER;
        hash = (53 * hash) + leafType_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tutorial.Tree.Leaf}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tutorial.Tree.Leaf)
          ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_Leaf_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_Leaf_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.class, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder.class);
        }

        // Construct using ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          leafId_ = 0L;

          leafType_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_Leaf_descriptor;
        }

        @java.lang.Override
        public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getDefaultInstanceForType() {
          return ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.getDefaultInstance();
        }

        @java.lang.Override
        public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf build() {
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf buildPartial() {
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf result = new ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf(this);
          result.leafId_ = leafId_;
          result.leafType_ = leafType_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf) {
            return mergeFrom((ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf other) {
          if (other == ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.getDefaultInstance()) return this;
          if (other.getLeafId() != 0L) {
            setLeafId(other.getLeafId());
          }
          if (other.leafType_ != 0) {
            setLeafTypeValue(other.getLeafTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long leafId_ ;
        /**
         * <code>uint64 leafId = 1;</code>
         * @return The leafId.
         */
        public long getLeafId() {
          return leafId_;
        }
        /**
         * <code>uint64 leafId = 1;</code>
         * @param value The leafId to set.
         * @return This builder for chaining.
         */
        public Builder setLeafId(long value) {
          
          leafId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint64 leafId = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeafId() {
          
          leafId_ = 0L;
          onChanged();
          return this;
        }

        private int leafType_ = 0;
        /**
         * <code>.tutorial.Tree.LeafType leafType = 2;</code>
         * @return The enum numeric value on the wire for leafType.
         */
        public int getLeafTypeValue() {
          return leafType_;
        }
        /**
         * <code>.tutorial.Tree.LeafType leafType = 2;</code>
         * @param value The enum numeric value on the wire for leafType to set.
         * @return This builder for chaining.
         */
        public Builder setLeafTypeValue(int value) {
          leafType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.tutorial.Tree.LeafType leafType = 2;</code>
         * @return The leafType.
         */
        public ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType getLeafType() {
          @SuppressWarnings("deprecation")
          ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType result = ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.valueOf(leafType_);
          return result == null ? ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType.UNRECOGNIZED : result;
        }
        /**
         * <code>.tutorial.Tree.LeafType leafType = 2;</code>
         * @param value The leafType to set.
         * @return This builder for chaining.
         */
        public Builder setLeafType(ank.hao.io.protobuf.code.TreeProtos.Tree.LeafType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          leafType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.tutorial.Tree.LeafType leafType = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeafType() {
          
          leafType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tutorial.Tree.Leaf)
      }

      // @@protoc_insertion_point(class_scope:tutorial.Tree.Leaf)
      private static final ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf();
      }

      public static ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Leaf>
          PARSER = new com.google.protobuf.AbstractParser<Leaf>() {
        @java.lang.Override
        public Leaf parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Leaf(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Leaf> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Leaf> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AGE_FIELD_NUMBER = 2;
    private int age_;
    /**
     * <code>int32 age = 2;</code>
     * @return The age.
     */
    public int getAge() {
      return age_;
    }

    public static final int TREETYPE_FIELD_NUMBER = 3;
    private int treeType_;
    /**
     * <code>.tutorial.Tree.TreeType treeType = 3;</code>
     * @return The enum numeric value on the wire for treeType.
     */
    public int getTreeTypeValue() {
      return treeType_;
    }
    /**
     * <code>.tutorial.Tree.TreeType treeType = 3;</code>
     * @return The treeType.
     */
    public ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType getTreeType() {
      @SuppressWarnings("deprecation")
      ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType result = ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.valueOf(treeType_);
      return result == null ? ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.UNRECOGNIZED : result;
    }

    public static final int LEAF_FIELD_NUMBER = 4;
    private java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> leaf_;
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    public java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> getLeafList() {
      return leaf_;
    }
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    public java.util.List<? extends ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder> 
        getLeafOrBuilderList() {
      return leaf_;
    }
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    public int getLeafCount() {
      return leaf_.size();
    }
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getLeaf(int index) {
      return leaf_.get(index);
    }
    /**
     * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
     */
    public ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder getLeafOrBuilder(
        int index) {
      return leaf_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (age_ != 0) {
        output.writeInt32(2, age_);
      }
      if (treeType_ != ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.LIUSHU.getNumber()) {
        output.writeEnum(3, treeType_);
      }
      for (int i = 0; i < leaf_.size(); i++) {
        output.writeMessage(4, leaf_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (age_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, age_);
      }
      if (treeType_ != ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.LIUSHU.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, treeType_);
      }
      for (int i = 0; i < leaf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, leaf_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ank.hao.io.protobuf.code.TreeProtos.Tree)) {
        return super.equals(obj);
      }
      ank.hao.io.protobuf.code.TreeProtos.Tree other = (ank.hao.io.protobuf.code.TreeProtos.Tree) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getAge()
          != other.getAge()) return false;
      if (treeType_ != other.treeType_) return false;
      if (!getLeafList()
          .equals(other.getLeafList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + AGE_FIELD_NUMBER;
      hash = (53 * hash) + getAge();
      hash = (37 * hash) + TREETYPE_FIELD_NUMBER;
      hash = (53 * hash) + treeType_;
      if (getLeafCount() > 0) {
        hash = (37 * hash) + LEAF_FIELD_NUMBER;
        hash = (53 * hash) + getLeafList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ank.hao.io.protobuf.code.TreeProtos.Tree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ank.hao.io.protobuf.code.TreeProtos.Tree prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Tree}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Tree)
        ank.hao.io.protobuf.code.TreeProtos.TreeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ank.hao.io.protobuf.code.TreeProtos.Tree.class, ank.hao.io.protobuf.code.TreeProtos.Tree.Builder.class);
      }

      // Construct using ank.hao.io.protobuf.code.TreeProtos.Tree.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLeafFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        age_ = 0;

        treeType_ = 0;

        if (leafBuilder_ == null) {
          leaf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          leafBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ank.hao.io.protobuf.code.TreeProtos.internal_static_tutorial_Tree_descriptor;
      }

      @java.lang.Override
      public ank.hao.io.protobuf.code.TreeProtos.Tree getDefaultInstanceForType() {
        return ank.hao.io.protobuf.code.TreeProtos.Tree.getDefaultInstance();
      }

      @java.lang.Override
      public ank.hao.io.protobuf.code.TreeProtos.Tree build() {
        ank.hao.io.protobuf.code.TreeProtos.Tree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ank.hao.io.protobuf.code.TreeProtos.Tree buildPartial() {
        ank.hao.io.protobuf.code.TreeProtos.Tree result = new ank.hao.io.protobuf.code.TreeProtos.Tree(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.age_ = age_;
        result.treeType_ = treeType_;
        if (leafBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            leaf_ = java.util.Collections.unmodifiableList(leaf_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.leaf_ = leaf_;
        } else {
          result.leaf_ = leafBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ank.hao.io.protobuf.code.TreeProtos.Tree) {
          return mergeFrom((ank.hao.io.protobuf.code.TreeProtos.Tree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ank.hao.io.protobuf.code.TreeProtos.Tree other) {
        if (other == ank.hao.io.protobuf.code.TreeProtos.Tree.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getAge() != 0) {
          setAge(other.getAge());
        }
        if (other.treeType_ != 0) {
          setTreeTypeValue(other.getTreeTypeValue());
        }
        if (leafBuilder_ == null) {
          if (!other.leaf_.isEmpty()) {
            if (leaf_.isEmpty()) {
              leaf_ = other.leaf_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLeafIsMutable();
              leaf_.addAll(other.leaf_);
            }
            onChanged();
          }
        } else {
          if (!other.leaf_.isEmpty()) {
            if (leafBuilder_.isEmpty()) {
              leafBuilder_.dispose();
              leafBuilder_ = null;
              leaf_ = other.leaf_;
              bitField0_ = (bitField0_ & ~0x00000001);
              leafBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLeafFieldBuilder() : null;
            } else {
              leafBuilder_.addAllMessages(other.leaf_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ank.hao.io.protobuf.code.TreeProtos.Tree parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ank.hao.io.protobuf.code.TreeProtos.Tree) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int age_ ;
      /**
       * <code>int32 age = 2;</code>
       * @return The age.
       */
      public int getAge() {
        return age_;
      }
      /**
       * <code>int32 age = 2;</code>
       * @param value The age to set.
       * @return This builder for chaining.
       */
      public Builder setAge(int value) {
        
        age_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 age = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAge() {
        
        age_ = 0;
        onChanged();
        return this;
      }

      private int treeType_ = 0;
      /**
       * <code>.tutorial.Tree.TreeType treeType = 3;</code>
       * @return The enum numeric value on the wire for treeType.
       */
      public int getTreeTypeValue() {
        return treeType_;
      }
      /**
       * <code>.tutorial.Tree.TreeType treeType = 3;</code>
       * @param value The enum numeric value on the wire for treeType to set.
       * @return This builder for chaining.
       */
      public Builder setTreeTypeValue(int value) {
        treeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tutorial.Tree.TreeType treeType = 3;</code>
       * @return The treeType.
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType getTreeType() {
        @SuppressWarnings("deprecation")
        ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType result = ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.valueOf(treeType_);
        return result == null ? ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tutorial.Tree.TreeType treeType = 3;</code>
       * @param value The treeType to set.
       * @return This builder for chaining.
       */
      public Builder setTreeType(ank.hao.io.protobuf.code.TreeProtos.Tree.TreeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        treeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tutorial.Tree.TreeType treeType = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTreeType() {
        
        treeType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> leaf_ =
        java.util.Collections.emptyList();
      private void ensureLeafIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          leaf_ = new java.util.ArrayList<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf>(leaf_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder, ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder> leafBuilder_;

      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> getLeafList() {
        if (leafBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leaf_);
        } else {
          return leafBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public int getLeafCount() {
        if (leafBuilder_ == null) {
          return leaf_.size();
        } else {
          return leafBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf getLeaf(int index) {
        if (leafBuilder_ == null) {
          return leaf_.get(index);
        } else {
          return leafBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder setLeaf(
          int index, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf value) {
        if (leafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafIsMutable();
          leaf_.set(index, value);
          onChanged();
        } else {
          leafBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder setLeaf(
          int index, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder builderForValue) {
        if (leafBuilder_ == null) {
          ensureLeafIsMutable();
          leaf_.set(index, builderForValue.build());
          onChanged();
        } else {
          leafBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder addLeaf(ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf value) {
        if (leafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafIsMutable();
          leaf_.add(value);
          onChanged();
        } else {
          leafBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder addLeaf(
          int index, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf value) {
        if (leafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafIsMutable();
          leaf_.add(index, value);
          onChanged();
        } else {
          leafBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder addLeaf(
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder builderForValue) {
        if (leafBuilder_ == null) {
          ensureLeafIsMutable();
          leaf_.add(builderForValue.build());
          onChanged();
        } else {
          leafBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder addLeaf(
          int index, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder builderForValue) {
        if (leafBuilder_ == null) {
          ensureLeafIsMutable();
          leaf_.add(index, builderForValue.build());
          onChanged();
        } else {
          leafBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder addAllLeaf(
          java.lang.Iterable<? extends ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf> values) {
        if (leafBuilder_ == null) {
          ensureLeafIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leaf_);
          onChanged();
        } else {
          leafBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder clearLeaf() {
        if (leafBuilder_ == null) {
          leaf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          leafBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public Builder removeLeaf(int index) {
        if (leafBuilder_ == null) {
          ensureLeafIsMutable();
          leaf_.remove(index);
          onChanged();
        } else {
          leafBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder getLeafBuilder(
          int index) {
        return getLeafFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder getLeafOrBuilder(
          int index) {
        if (leafBuilder_ == null) {
          return leaf_.get(index);  } else {
          return leafBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public java.util.List<? extends ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder> 
           getLeafOrBuilderList() {
        if (leafBuilder_ != null) {
          return leafBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leaf_);
        }
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder addLeafBuilder() {
        return getLeafFieldBuilder().addBuilder(
            ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder addLeafBuilder(
          int index) {
        return getLeafFieldBuilder().addBuilder(
            index, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.Tree.Leaf leaf = 4;</code>
       */
      public java.util.List<ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder> 
           getLeafBuilderList() {
        return getLeafFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder, ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder> 
          getLeafFieldBuilder() {
        if (leafBuilder_ == null) {
          leafBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf, ank.hao.io.protobuf.code.TreeProtos.Tree.Leaf.Builder, ank.hao.io.protobuf.code.TreeProtos.Tree.LeafOrBuilder>(
                  leaf_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          leaf_ = null;
        }
        return leafBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Tree)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Tree)
    private static final ank.hao.io.protobuf.code.TreeProtos.Tree DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ank.hao.io.protobuf.code.TreeProtos.Tree();
    }

    public static ank.hao.io.protobuf.code.TreeProtos.Tree getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Tree>
        PARSER = new com.google.protobuf.AbstractParser<Tree>() {
      @java.lang.Override
      public Tree parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tree(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Tree> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tree> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ank.hao.io.protobuf.code.TreeProtos.Tree getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Tree_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Tree_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Tree_Leaf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Tree_Leaf_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$ank/hao/io/protobuf/proto/tree.proto\022\010" +
      "tutorial\"\203\002\n\004Tree\022\014\n\004name\030\001 \001(\t\022\013\n\003age\030\002" +
      " \001(\005\022)\n\010treeType\030\003 \001(\0162\027.tutorial.Tree.T" +
      "reeType\022!\n\004leaf\030\004 \003(\0132\023.tutorial.Tree.Le" +
      "af\032A\n\004Leaf\022\016\n\006leafId\030\001 \001(\004\022)\n\010leafType\030\002" +
      " \001(\0162\027.tutorial.Tree.LeafType\"#\n\010TreeTyp" +
      "e\022\n\n\006LIUSHU\020\000\022\013\n\007YANGSHU\020\001\"*\n\010LeafType\022\t" +
      "\n\005GREEN\020\000\022\n\n\006YELLOW\020\001\022\007\n\003RED\020\002B&\n\030ank.ha" +
      "o.io.protobuf.codeB\nTreeProtosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tutorial_Tree_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tutorial_Tree_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Tree_descriptor,
        new java.lang.String[] { "Name", "Age", "TreeType", "Leaf", });
    internal_static_tutorial_Tree_Leaf_descriptor =
      internal_static_tutorial_Tree_descriptor.getNestedTypes().get(0);
    internal_static_tutorial_Tree_Leaf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Tree_Leaf_descriptor,
        new java.lang.String[] { "LeafId", "LeafType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
